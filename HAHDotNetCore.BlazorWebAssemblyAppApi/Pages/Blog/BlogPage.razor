@page "/blog"
@inject HttpClient HttpClient

<h3>Blog</h3>

<div class="mb-3">
    <label class="form-label">Blog Title</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogTitle">
</div>
<div class="mb-3">
    <label class="form-label">Blog Author</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogAuthor">
</div>
<div class="mb-3">
    <label class="form-label">Blog Content</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogContent">
</div>
@*<button type="button" class="btn btn-success" @onclick="Save">Save</button>*@

@if (Blogs != null && Blogs.Count > 0)
{
    int count = 0;
    <table class="table">
        <thead>
            <tr>
                <th>No</th>
                <th>Id</th>
                <th>Title</th>
                <th>Author</th>
                <th>Content</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Blogs)
            {
                <tr>
                    <td>@(++count)</td>
                    <td>@item.BlogId</td>
                    <td>@item.BlogTitle</td>
                    <td>@item.BlogAuthor</td>
                    <td>@item.BlogContent</td>
                    <td>
                        @*<button type="button" class="btn btn-primary me-2" @onclick="() => Edit(item.BlogId)">Edit</button>
                            <button type="button" class="btn btn-danger" @onclick="() => Delete(item.BlogId)">Delete</button>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private BlogModel requestModel = new();
    private readonly string apiEndPoint = "api/Blog";
    private List<BlogModel> Blogs = new List<BlogModel>();

    protected override async Task OnInitializedAsync()
    {
        await List();
    }


    private async Task List()
    {
        var response = await HttpClient.GetAsync(apiEndPoint);
        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadAsStringAsync();
            Blogs = JsonConvert.DeserializeObject<List<BlogModel>>(json)!;
        }
    }


    public class BlogModel
    {
        public int BlogId { get; set; }
        public string BlogTitle { get; set; }
        public string BlogAuthor { get; set; }
        public string BlogContent { get; set; }
    }

}

